name: Test

on:
  pull_request:
  push:
  workflow_call:

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  # Build with only line information enabled to decrease compilation
  # time and binary artifact sizes in CI, while still providing relevant
  # data in backtraces. This option is assumed to only have marginal
  # effects on the generated code, likely only in terms of section
  # arrangement. See
  # https://doc.rust-lang.org/rustc/codegen-options/index.html#debuginfo
  RUSTFLAGS: '-C debuginfo=line-tables-only'

jobs:
  build:
    name: Build [${{ matrix.rust }}, ${{ matrix.profile }}]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust: [stable]
        profile: [dev, release]
    steps:
    - uses: actions/checkout@v5
    - uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}
    - name: Build ${{ matrix.profile }}
      run: cargo build --profile=${{ matrix.profile }} --all-targets --workspace
  build-wasm32:
    name: Build for wasm32
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    - uses: dtolnay/rust-toolchain@stable
      with:
        target: wasm32-unknown-unknown
    - run: cargo build --target=wasm32-unknown-unknown
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    - name: Test
      run: cargo test --workspace
  cli-usage:
    name: CLI Usage
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    - run: |
        echo '```' > cli/USAGE.md
        cargo run --package bpflinter -- --help >> cli/USAGE.md
        echo '```' >> cli/USAGE.md
    - name: Check that usage info is up-to-date
      run: git diff --exit-code ||
             (echo "!!!! CHECKED IN USAGE.md IS OUTDATED !!!!" && false)
  clippy:
    name: Lint with clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo clippy --no-deps --all-targets --workspace -- -A unknown_lints -D warnings
  rustfmt:
    name: Check Rust code formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt
      - run: cargo +nightly fmt -- --check
  htmlfmt:
    name: Check HTML code formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v4
      - run: npm install --global js-beautify
      - run: js-beautify --replace --indent-size 2 --end-with-newline www/index.html
      - run: git diff --color=always --exit-code
  cargo-doc:
    name: Generate documentation
    runs-on: ubuntu-latest
    env:
      RUSTDOCFLAGS: '-D warnings'
    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@nightly
      - run: cargo doc --workspace --no-deps --document-private-items
